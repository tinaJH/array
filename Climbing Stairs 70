//每次可以走1步或者2步
class Solution {
    public int climbStairs(int n) {
        if (n == 1) {
            return 1;
        }
        
        int last = 1, lastlast = 1;
        int now = 0;
        for (int i = 2; i <= n; i++) {
            now = last + lastlast;
            lastlast = last;
            last = now;
        }
        return now;
    }
}

//可以走1步／2步／3步
//f[1] = f[1] + f[0] = 1
//f[2] = f[2] + f[1], f[2] = f[2] + f[0], f[2] = 2
//f[3] = f[3] + f[2], f[3] = f[3] + f[1], f[3] = f[3] + f[0], f[3] = 2 + 1 + 1 = 4
//注意把int改成long，因为可能overflow
public class Solution {
    public int climbStairs2(int n) {
        int[] f = new int[n+1];
        f[0] = 1;
        for (int i = 0; i <= n; i++) {
            for (int j = 1; j <= 3; j++) {
                if (i >= j) {
                    f[i] += f[i-j];
                }
            }
        }
        return f[n];
    }
}
